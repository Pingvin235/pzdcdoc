apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
	mavenLocal()
	mavenCentral()
}

buildDir = 'target'

eclipse {
    classpath {
        // enable here source download if needed
        downloadJavadoc = false
        downloadSources = false
    }
}

idea {
    module {}
}

configurations {
	all {
    	transitive = false
    }
    // for demo build
    pzdcdoc {
    	transitive = true
    }
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    compile group: 'org.asciidoctor', name: 'asciidoctorj', version: '1.5.6'
	compile group: 'com.beust', name: 'jcommander', version: '1.35'
	compile group: 'org.jruby', name: 'jruby-complete', version: '1.7.26'
	
	// for demo build
	pzdcdoc group: 'org.pzdcdoc', name: 'pzdcdoc', version: '0.8'
}

sourceSets {
    main {
        java {
            srcDir 'src/main'
        }
        resources {
			srcDir 'src/main'
			include 'log4j2.properties'
		} 
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task buildDemoDoc(type:JavaExec) {
	classpath =  configurations.pzdcdoc
	main = 'org.pzdcdoc.DocGenerator'
	args 'demo/cfg', 'demo/src', 'target/doc', '3.0'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
        	groupId 'org.pzdcdoc'
            artifactId 'pzdcdoc'
            version '0.8'        
            from components.java
        }
    }
}

/* Uncomment for publish.
repositories {
    maven {
        url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
        credentials {
            username sonatypeUsername
            password sonatypePassword
        }
    }
}
*/